{"ast":null,"code":"var _jsxFileName = \"/Users/pradeepmarasini/Desktop/LATEST_REACT_PORTFOLIO/pradeep-marasini-react-portfolio/client/src/Components/UsedTechnologies/UsedTechnologies.js\";\nimport React, { useState } from 'react';\nimport { Paper, Grid, makeStyles, Typography, Box, Container } from '@material-ui/core'; //Import profile image\n\nimport portfolio from \"../Images/pradeepPhoto.jpg\"; //Using custom css\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: '30px',\n    maxWidth: \"auto\",\n    backgroundColor: \"#f0ead2\",\n    color: \"#033500\",\n    borderRadius: \"40px\"\n  },\n  aboutMeTitle: {\n    textAlign: \"center\",\n    color: \"#373e02\"\n  },\n  aboutMe: {\n    textAlign: \"left\"\n  }\n}));\nexport default function UsedTechnologies() {\n  const classes = useStyles(); //Setting state\n\n  const [title, setTitle] = useState(\"Technical Proficiencies\");\n  const [frontEndTechnologies, setfrontEndTechnologies] = useState([\"HTML\", \"CSS\", \"JavaScript\", \"jQuery\", \"C/C++\", \"Handlebars JS\", \"JSON\", \"JSX\", \"React JS\", \"Bootstrap\", \"Material UI\", \"Qt-GUI\"]);\n  const [backEndTechnologies, setbackEndTechnologies] = useState([\"Node JS\", \"Express JS\", \"Libraries: Bcryptjs, JSON webtoken, Multer, Passport-local, socket.io\"]);\n  const [databaseTechnologies, setdatabaseTechnologies] = useState([\"MySQL\", \"MongoDB\", \"Sqllite\", \"PostgreSQL\", \"ORM: Sequelize\", \"ORM: Mongoose\"]);\n  const [testingTechnologies, settestingTechnologies] = useState([\"Jest\", \"BITBUCKET\", \"JIRA\", \"GITHUB\", \"GITLAB\", \"HEROKU\"]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    className: classes.aboutMeTitle,\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, title), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    className: classes.aboutMe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, \"Front End\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }), frontEndTechnologies.map(technology => /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, technology))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, \"Back End\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }), backEndTechnologies.map(technology => /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }, technology))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }, \"Database And ORM\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }), databaseTechnologies.map(technology => /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }\n  }, technology))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }, \"Testing/SDLC/Others\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }), testingTechnologies.map(technology => /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 29\n    }\n  }, technology))))));\n}","map":{"version":3,"sources":["/Users/pradeepmarasini/Desktop/LATEST_REACT_PORTFOLIO/pradeep-marasini-react-portfolio/client/src/Components/UsedTechnologies/UsedTechnologies.js"],"names":["React","useState","Paper","Grid","makeStyles","Typography","Box","Container","portfolio","useStyles","theme","root","flexGrow","paper","padding","spacing","margin","maxWidth","backgroundColor","color","borderRadius","aboutMeTitle","textAlign","aboutMe","UsedTechnologies","classes","title","setTitle","frontEndTechnologies","setfrontEndTechnologies","backEndTechnologies","setbackEndTechnologies","databaseTechnologies","setdatabaseTechnologies","testingTechnologies","settestingTechnologies","map","technology"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Paper, Grid, makeStyles, Typography, Box, Container } from '@material-ui/core';\n\n//Import profile image\nimport portfolio from \"../Images/pradeepPhoto.jpg\"\n\n//Using custom css\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        margin: '30px',\n        maxWidth: \"auto\",\n        backgroundColor: \"#f0ead2\",\n        color: \"#033500\",\n        borderRadius: \"40px\"\n    },\n\n   \n    aboutMeTitle: {\n        textAlign: \"center\",\n        color: \"#373e02\",\n\n    },\n    aboutMe: {\n        textAlign: \"left\"\n\n    }\n}));\n\nexport default function UsedTechnologies() {\n\n    const classes = useStyles();\n\n    //Setting state\n    const [title, setTitle] = useState(\"Technical Proficiencies\")\n    const [frontEndTechnologies, setfrontEndTechnologies] = useState(\n        [\n            \"HTML\",\n            \"CSS\", \n            \"JavaScript\", \n            \"jQuery\",\n            \"C/C++\",\n            \"Handlebars JS\",\n            \"JSON\",\n            \"JSX\",\n            \"React JS\", \n            \"Bootstrap\",\n            \"Material UI\",\n            \"Qt-GUI\",\n\n        ])\n    const [backEndTechnologies, setbackEndTechnologies] = useState(\n        [\n            \"Node JS\",\n            \"Express JS\",\n            \"Libraries: Bcryptjs, JSON webtoken, Multer, Passport-local, socket.io\"\n        ])\n\n    const [databaseTechnologies, setdatabaseTechnologies] = useState(\n        [\n            \"MySQL\",\n            \"MongoDB\",\n            \"Sqllite\",\n            \"PostgreSQL\",\n            \"ORM: Sequelize\",\n            \"ORM: Mongoose\",\n        ])\n\n    const [testingTechnologies, settestingTechnologies] = useState(\n        [\n            \"Jest\",\n            \"BITBUCKET\",\n            \"JIRA\",\n            \"GITHUB\",\n            \"GITLAB\",\n            \"HEROKU\"\n        ])\n\n    return (\n\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <Typography variant=\"h4\" className={classes.aboutMeTitle} gutterBottom >{title}</Typography>\n                <hr />\n                <Grid item xs container spacing={3}>\n                    <Grid item xs={12} md={3} className={classes.aboutMe}>\n                        <Typography variant=\"h5\">Front End</Typography>\n                        <hr />\n                        {frontEndTechnologies.map(technology => (\n                            <Typography variant=\"h6\">{technology}</Typography>\n                        ))}\n\n\n                    </Grid>\n\n                    <Grid item xs={12} md={3}>\n                        <Typography variant=\"h5\" >Back End</Typography>\n                        <hr />\n                        {backEndTechnologies.map(technology => (\n                            <Typography variant=\"h6\">{technology}</Typography>\n                        ))}\n                    </Grid>\n\n                    <Grid item xs={12} md={3}>\n                        <Typography variant=\"h5\" >Database And ORM</Typography>\n                        <hr />\n                        {databaseTechnologies.map(technology => (\n                            <Typography variant=\"h6\">{technology}</Typography>\n                        ))}\n                    </Grid>\n\n                    <Grid item xs={12} md={3}>\n                        <Typography variant=\"h5\" >Testing/SDLC/Others</Typography>\n                        <hr />\n                        {testingTechnologies.map(technology => (\n                            <Typography variant=\"h6\">{technology}</Typography>\n                        ))}\n                    </Grid>\n                </Grid>\n\n            </Paper>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}
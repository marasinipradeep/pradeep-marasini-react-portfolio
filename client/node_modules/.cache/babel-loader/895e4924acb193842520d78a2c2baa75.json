{"ast":null,"code":"var _jsxFileName = \"/Users/pradeepmarasini/Desktop/LATEST_REACT_PORTFOLIO/pradeep-marasini-react-portfolio/client/src/Components/Technologies/Technologies.js\";\n// import React, { useState } from 'react';\n// import Project from './techProject';\n// import Fade from 'react-reveal/Fade';\n// import Card from '../Cards/Cards';\n// import { FaLaptop, FaLaptopCode, FaDatabase, FaExpand } from \"react-icons/fa\"\n// //import from services css\n// //import './Technologies.css'\n// function Services() {\n//     const [tech, setTech] = useState(\n//         {\n//             projects: [\n//                 {\n//                     id: 1,//DO NOT CHANGE THIS (Please)ðŸ˜…\n//                     title: 'Go-Employee', //Project Title - Add Your Project Title Here\n//                     service: 'This application helps to establish a connection between industry owner and job seeker. This is useful for business owner to find workers instantly in busy time. And benefits worker  because they can register, add information, and put themselves online so hiring person can see, view them and get connect.', // Add Your Service Type Here\n//                     //Project Image - Add Your Project Image Here\n//                     imageSrc: FaLaptop\n//                 },\n//                 {\n//                     id: 2,\n//                     title: 'React-Portfolio',\n//                     service: 'This is a portfolio, which is useful to presents personal information, evidence of relevant skills and abilities.The website provides personal information in depth which includes personal introduction, list of proficient technologies, contact information and list of projects that have been accomplished.',\n//                     imageSrc: FaLaptop\n//                 },\n//             ]\n//         }\n//     )\n// const [frontEndTechnologies, setfrontEndTechnologies] = useState(\n//     [\n//         \"HTML\",\n//         \"CSS\",\n//         \"Javascript\",\n//         \"jQuery\",\n//         \"C/C++\",\n//         \"Handlebars JS\",\n//         \"JSON\",\n//         \"JSX\",\n//         \"React JS\",\n//         \"Bootstrap\",\n//         \"Material UI\",\n//         \"Qt GUI\",\n//     ])\n// const [backEndTechnologies, setbackEndTechnologies] = useState(\n//     [\n//         \"Node JS\",\n//         \"Express JS\",\n//         \"Libraries: Bcryptjs, JSON webtoken, Multer, Passport-local, socket.io\"\n//     ])\n// const [databaseTechnologies, setdatabaseTechnologies] = useState(\n//     [\n//         \"MySQL\",\n//         \"MongoDB\",\n//         \"Sqllite\",\n//         \"PostgreSQL\",\n//         \"ORM: Sequelize\",\n//         \"ORM: Mongoose\",\n//     ])\n// const [testingTechnologies, settestingTechnologies] = useState(\n//     [\n//         \"Jest\",\n//         \"Bitbucket\",\n//         \"Jira\",\n//         \"Github\",\n//         \"Gitlab\",\n//         \"Heroku\"\n//     ])\n// const [state, setState] = useState({\n//     technologies: [\n//         {\n//             icon: <FaLaptop />,\n//             title: \"Front End\",\n//             technology: frontEndTechnologies.map(frontend => {\n//                 return <ul>\n//                     <li>\n//                         {frontend}\n//                     </li>\n//                 </ul>\n//             })\n//         },\n//         {\n//             icon: <FaLaptopCode />,\n//             title: \"Back End\",\n//             technology: backEndTechnologies.map(backend => {\n//                 return <ul>\n//                     <li>\n//                         {backend}\n//                     </li>\n//                 </ul>\n//             })\n//         },\n//         {\n//             icon: <FaDatabase />,\n//             title: \"Database\",\n//             technology: databaseTechnologies.map(database => {\n//                 return <ul>\n//                     <li >\n//                         {database}\n//                     </li>\n//                 </ul>\n//             })\n//         },\n//         {\n//             icon: <FaExpand />,\n//             title: \"Testing/Others\",\n//             technology: testingTechnologies.map(testing => {\n//                 return <ul>\n//                     <li>\n//                         {testing}\n//                     </li>\n//                 </ul>\n//             })\n//         },\n//     ]\n// })\n//     return (\n//         <div>\n//             <h1 className='heading'>\n//                 <Fade bottom cascade>Work.</Fade></h1>\n//             <div className='work-content'>\n//                 {/* {tech.projects.map((project) => (\n//                     <Project key={project.title}\n//                         title={project.icon}\n//                         service = {project.service}\n//                     >\n//                     </Project>\n//                 ))} */}\n//               <Card/>\n//             </div>\n//         </div>\n//     );\n// }\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { Card, CardHeader, CardMedia, CardContent, CardActions, Collapse, Avatar, IconButton, Typography } from '@material-ui/core';\nimport { FaLaptop, FaLaptopCode, FaDatabase, FaExpand } from \"react-icons/fa\";\nimport { red, blue } from '@material-ui/core/colors';\nimport { GitHub, LiveTv } from '@material-ui/icons';\nimport { useProjectsContext } from \"../Utils/ProjectsContext\";\nimport { Grid } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: \"80%\",\n    margin: 'auto',\n    backgroundColor: \"#e2c779\",\n    color: \"black\",\n    marginBottom: \"50px\"\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%' // 16:9\n\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    margin: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  },\n  avatar: {\n    backgroundColor: red[500],\n    fontSize: \"35px\"\n  },\n  cardHeader: {\n    backgroundColor: \"#faf0db\"\n  },\n  cardFooter: {\n    backgroundColor: \"#f3e5ab\"\n  },\n  description: {\n    color: \"#112222\"\n  }\n}));\nexport default function Services() {\n  //importing useProject context \n  const [state, setState] = useState([{\n    sys: {\n      id: \"1\"\n    },\n    fields: {\n      projectName: \"Languages\",\n      technoligiesUsed: [\"HTML\", \"CSS\", \"Javascript\", \"C/C++\"]\n    }\n  }, {\n    sys: {\n      id: \"2\"\n    },\n    fields: {\n      projectName: \"Front end libraries/framework\",\n      technoligiesUsed: [\"jQuery\", \"Handlebars JS\", \"React JS\", \"Next JS\", \"Apollo\", \"Bootstrap\", \"Material UI\", \"Foundation\", \"Qt GUI\"]\n    }\n  }, {\n    sys: {\n      id: \"3\"\n    },\n    fields: {\n      projectName: \"Back end libraries/framework\",\n      technoligiesUsed: [\"Node JS\", \"Express JS\", \"Yoga Server\", \"Prisma\", \"Sequilize\"]\n    }\n  }, {\n    sys: {\n      id: \"4\"\n    },\n    fields: {\n      projectName: \"Database\",\n      technoligiesUsed: [\"MySQL\", \"MongoDB\", \"Sqllite\", \"PostgreSQL\", \"ORM: Sequelize\", \"ORM: Mongoose\"]\n    }\n  }]);\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(true);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, state.length ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 21\n    }\n  }, state.map((project, i) => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      \"aria-label\": \"recipe\",\n      className: classes.avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 49\n      }\n    }, project.fields.projectName.charAt(0)),\n    action: /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"settings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 49\n      }\n    }),\n    titleTypographyProps: {\n      variant: \"h4\"\n    },\n    title: project.fields.projectName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Collapse, {\n    in: expanded,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 41\n    }\n  }, project.fields.technoligiesUsed.map(technoligiesUsed => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    paragraph: true,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 53\n    }\n  }, technoligiesUsed)))))))))) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 21\n    }\n  }, \"No projects Found\"));\n}","map":{"version":3,"sources":["/Users/pradeepmarasini/Desktop/LATEST_REACT_PORTFOLIO/pradeep-marasini-react-portfolio/client/src/Components/Technologies/Technologies.js"],"names":["React","useState","makeStyles","clsx","Card","CardHeader","CardMedia","CardContent","CardActions","Collapse","Avatar","IconButton","Typography","FaLaptop","FaLaptopCode","FaDatabase","FaExpand","red","blue","GitHub","LiveTv","useProjectsContext","Grid","useStyles","theme","root","maxWidth","margin","backgroundColor","color","marginBottom","media","height","paddingTop","expand","transform","transition","transitions","create","duration","shortest","expandOpen","avatar","fontSize","cardHeader","cardFooter","description","Services","state","setState","sys","id","fields","projectName","technoligiesUsed","classes","expanded","setExpanded","length","map","project","i","charAt","variant"],"mappings":";AAAA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAIA;AACA;AAIA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,WAAtC,EAAmDC,WAAnD,EAAgEC,QAAhE,EAA0EC,MAA1E,EAAkFC,UAAlF,EAA8FC,UAA9F,QAAgH,mBAAhH;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,UAAjC,EAA6CC,QAA7C,QAA6D,gBAA7D;AACA,SAASC,GAAT,EAAcC,IAAd,QAA0B,0BAA1B;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,oBAA/B;AAEA,SAASC,kBAAT,QAAmC,0BAAnC;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA,MAAMC,SAAS,GAAGrB,UAAU,CAAEsB,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE,KADR;AAEFC,IAAAA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","sourcesContent":["// import React, { useState } from 'react';\n// import Project from './techProject';\n// import Fade from 'react-reveal/Fade';\n// import Card from '../Cards/Cards';\n\n// import { FaLaptop, FaLaptopCode, FaDatabase, FaExpand } from \"react-icons/fa\"\n\n\n// //import from services css\n// //import './Technologies.css'\n\n// function Services() {\n\n//     const [tech, setTech] = useState(\n//         {\n\n//             projects: [\n//                 {\n//                     id: 1,//DO NOT CHANGE THIS (Please)ðŸ˜…\n//                     title: 'Go-Employee', //Project Title - Add Your Project Title Here\n//                     service: 'This application helps to establish a connection between industry owner and job seeker. This is useful for business owner to find workers instantly in busy time. And benefits worker  because they can register, add information, and put themselves online so hiring person can see, view them and get connect.', // Add Your Service Type Here\n//                     //Project Image - Add Your Project Image Here\n//                     imageSrc: FaLaptop\n//                 },\n//                 {\n//                     id: 2,\n//                     title: 'React-Portfolio',\n//                     service: 'This is a portfolio, which is useful to presents personal information, evidence of relevant skills and abilities.The website provides personal information in depth which includes personal introduction, list of proficient technologies, contact information and list of projects that have been accomplished.',\n//                     imageSrc: FaLaptop\n//                 },\n\n//             ]\n//         }\n//     )\n\n// const [frontEndTechnologies, setfrontEndTechnologies] = useState(\n//     [\n//         \"HTML\",\n//         \"CSS\",\n//         \"Javascript\",\n//         \"jQuery\",\n//         \"C/C++\",\n//         \"Handlebars JS\",\n//         \"JSON\",\n//         \"JSX\",\n//         \"React JS\",\n//         \"Bootstrap\",\n//         \"Material UI\",\n//         \"Qt GUI\",\n\n//     ])\n\n// const [backEndTechnologies, setbackEndTechnologies] = useState(\n//     [\n//         \"Node JS\",\n//         \"Express JS\",\n//         \"Libraries: Bcryptjs, JSON webtoken, Multer, Passport-local, socket.io\"\n//     ])\n\n// const [databaseTechnologies, setdatabaseTechnologies] = useState(\n//     [\n//         \"MySQL\",\n//         \"MongoDB\",\n//         \"Sqllite\",\n//         \"PostgreSQL\",\n//         \"ORM: Sequelize\",\n//         \"ORM: Mongoose\",\n//     ])\n\n// const [testingTechnologies, settestingTechnologies] = useState(\n//     [\n//         \"Jest\",\n//         \"Bitbucket\",\n//         \"Jira\",\n//         \"Github\",\n//         \"Gitlab\",\n//         \"Heroku\"\n//     ])\n\n\n// const [state, setState] = useState({\n//     technologies: [\n//         {\n//             icon: <FaLaptop />,\n//             title: \"Front End\",\n//             technology: frontEndTechnologies.map(frontend => {\n//                 return <ul>\n//                     <li>\n//                         {frontend}\n//                     </li>\n//                 </ul>\n//             })\n\n//         },\n//         {\n//             icon: <FaLaptopCode />,\n//             title: \"Back End\",\n//             technology: backEndTechnologies.map(backend => {\n//                 return <ul>\n//                     <li>\n//                         {backend}\n//                     </li>\n//                 </ul>\n//             })\n\n//         },\n//         {\n//             icon: <FaDatabase />,\n//             title: \"Database\",\n//             technology: databaseTechnologies.map(database => {\n//                 return <ul>\n//                     <li >\n//                         {database}\n//                     </li>\n//                 </ul>\n//             })\n\n//         },\n//         {\n//             icon: <FaExpand />,\n//             title: \"Testing/Others\",\n//             technology: testingTechnologies.map(testing => {\n//                 return <ul>\n//                     <li>\n//                         {testing}\n//                     </li>\n//                 </ul>\n//             })\n\n//         },\n//     ]\n\n// })\n//     return (\n//         <div>\n//             <h1 className='heading'>\n//                 <Fade bottom cascade>Work.</Fade></h1>\n//             <div className='work-content'>\n//                 {/* {tech.projects.map((project) => (\n\n//                     <Project key={project.title}\n//                         title={project.icon}\n//                         service = {project.service}\n//                     >\n\n//                     </Project>\n//                 ))} */}\n\n//               <Card/>\n//             </div>\n//         </div>\n\n\n\n//     );\n// }\n\n\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { Card, CardHeader, CardMedia, CardContent, CardActions, Collapse, Avatar, IconButton, Typography } from '@material-ui/core';\nimport { FaLaptop, FaLaptopCode, FaDatabase, FaExpand } from \"react-icons/fa\"\nimport { red, blue } from '@material-ui/core/colors';\nimport { GitHub, LiveTv } from '@material-ui/icons';\n\nimport { useProjectsContext } from \"../Utils/ProjectsContext\"\nimport { Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: \"80%\",\n        margin: 'auto',\n        backgroundColor: \"#e2c779\",\n        color: \"black\",\n        marginBottom: \"50px\"\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        margin: 'auto',\n\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n\n    },\n    avatar: {\n        backgroundColor: red[500],\n        fontSize: \"35px\"\n    },\n    cardHeader: {\n        backgroundColor: \"#faf0db\"\n    },\n    cardFooter: {\n        backgroundColor: \"#f3e5ab\"\n    },\n    description: {\n        color: \"#112222\"\n    }\n}));\n\n\n\nexport default function Services() {\n\n    //importing useProject context \n    const [state, setState] = useState(\n        [\n            {\n                sys: {\n                    id: \"1\"\n                },\n                fields: {\n                    projectName: \"Languages\",\n                    technoligiesUsed: [\n                        \"HTML\",\n                        \"CSS\",\n                        \"Javascript\",\n                        \"C/C++\"\n                    ]\n                }\n            },\n\n            {\n                sys: {\n                    id: \"2\"\n                },\n                fields: {\n                    projectName: \"Front end libraries/framework\",\n                    technoligiesUsed: [\n                        \"jQuery\",\n                        \"Handlebars JS\",\n                        \"React JS\",\n                        \"Next JS\",\n                        \"Apollo\",\n                        \"Bootstrap\",\n                        \"Material UI\",\n                        \"Foundation\",\n                        \"Qt GUI\",\n                    ]\n                }\n            },\n\n            {\n                sys: {\n                    id: \"3\"\n                },\n                fields: {\n                    projectName: \"Back end libraries/framework\",\n                    technoligiesUsed: [\n                        \"Node JS\",\n                        \"Express JS\",\n                        \"Yoga Server\",\n                        \"Prisma\",\n                        \"Sequilize\"\n                    ]\n                }\n            },\n\n            {\n                sys: {\n                    id: \"4\"\n                },\n                fields: {\n                    projectName: \"Database\",\n                    technoligiesUsed: [\n                        \"MySQL\",\n                        \"MongoDB\",\n                        \"Sqllite\",\n                        \"PostgreSQL\",\n                        \"ORM: Sequelize\",\n                        \"ORM: Mongoose\",\n                    ]\n                }\n            },\n\n        ]\n    )\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(true);\n\n\n\n    return (\n\n        <>\n\n            {state.length ? (\n\n                <div>\n                    <Grid item xs container spacing={3} >\n                        {state.map((project, i) => (\n\n                            <Grid item xs={12} md={4} lg={3}>\n                                <Card className={classes.root}>\n                                    <CardHeader\n                                        avatar={<Avatar aria-label=\"recipe\"\n                                            className={classes.avatar}>{project.fields.projectName.charAt(0)}</Avatar>}\n                                        action={<IconButton aria-label=\"settings\"></IconButton>}\n                                        titleTypographyProps={{ variant: \"h4\" }}\n                                        title={project.fields.projectName}\n                                    />\n\n\n\n                                    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                                        <CardContent>\n\n                                            {project.fields.technoligiesUsed.map(technoligiesUsed => (\n                                                <div>\n                                                    <Typography paragraph variant=\"h6\">\n                                                        {technoligiesUsed}\n                                                    </Typography>\n                                                </div>\n\n                                            ))}\n\n                                        </CardContent>\n\n                                    </Collapse>\n                                </Card>\n                            </Grid>\n\n                        ))}\n                    </Grid>\n\n                </div>\n            ) :\n                (\n                    <h3>No projects Found</h3>\n\n                )}\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}
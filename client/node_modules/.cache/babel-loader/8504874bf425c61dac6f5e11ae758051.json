{"ast":null,"code":"var _jsxFileName = \"/Users/pradeepmarasini/Desktop/LATEST_REACT_PORTFOLIO/pradeep-marasini-react-portfolio/client/src/Components/Cards/Cards.js\";\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { Card, CardHeader, CardMedia, CardContent, CardActions, Collapse, Avatar, IconButton, Typography } from '@material-ui/core';\nimport { red, blue } from '@material-ui/core/colors';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { GitHub, LiveTv } from '@material-ui/icons';\nimport { useProjectsContext } from \"../Utils/ProjectsContext\";\nimport { Grid } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: \"80%\",\n    margin: 'auto',\n    backgroundColor: theme.palette.secondary.light,\n    color: theme.palette.secondary.contrastText,\n    marginBottom: \"50px\"\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%' // 16:9\n\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    margin: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  },\n  avatar: {\n    backgroundColor: red[500],\n    fontSize: \"35px\"\n  },\n  cardHeader: {\n    backgroundColor: \"lightgrey\"\n  },\n  cardFooter: {\n    backgroundColor: \"#f\"\n  }\n}));\nexport default function Cards() {\n  //importing useProject context \n  const [state, dispatch] = useProjectsContext();\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(true);\n\n  const handleExpandClick = (event, id) => {\n    console.log(\"handle expand click\");\n    const btnName = event.currentTarget.value;\n    console.log(btnName);\n    console.log(id);\n    setExpanded(!expanded);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, state.length ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, state.map((project, i) => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    lg: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      \"aria-label\": \"recipe\",\n      className: classes.avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 49\n      }\n    }, project.fields.projectName.charAt(0)),\n    action: /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"settings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 49\n      }\n    }),\n    titleTypographyProps: {\n      variant: \"h4\"\n    },\n    title: project.fields.projectName,\n    subheaderTypographyProps: {\n      variant: \"subheader\"\n    },\n    subheader: project.fields.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 37\n    }\n  }), project.fields.images.map(projectImages => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    className: classes.media,\n    image: projectImages.fields.file.url,\n    title: \"Paella dish\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.cardHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 41\n    }\n  }, \" Description:\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    color: \"textPrimary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 41\n    }\n  }, project.fields.description)), /*#__PURE__*/React.createElement(CardActions, {\n    disableSpacing: true,\n    className: classes.cardFooter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"live url\",\n    onClick: () => window.open(project.fields.liveLink, '_blank'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(LiveTv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 140\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"Github\",\n    onClick: () => window.open(project.fields.githubLink, '_blank'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(GitHub, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 140\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    className: clsx(classes.expand, {\n      [classes.expandOpen]: expanded\n    }),\n    name: project.sys.id,\n    value: project.sys.id,\n    onClick: event => handleExpandClick(event, project.sys.id),\n    \"aria-expanded\": expanded,\n    \"aria-label\": \"show more\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(Collapse, {\n    in: expanded,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    paragraph: true,\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 45\n    }\n  }, \"Technologies Used:\"), project.fields.technoligiesUsed.map(technoligiesUsed => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    paragraph: true,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 53\n    }\n  }, technoligiesUsed)))))))))) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, \"No projects Found\"));\n}","map":{"version":3,"sources":["/Users/pradeepmarasini/Desktop/LATEST_REACT_PORTFOLIO/pradeep-marasini-react-portfolio/client/src/Components/Cards/Cards.js"],"names":["React","useEffect","makeStyles","clsx","Card","CardHeader","CardMedia","CardContent","CardActions","Collapse","Avatar","IconButton","Typography","red","blue","ExpandMoreIcon","MoreVertIcon","GitHub","LiveTv","useProjectsContext","Grid","useStyles","theme","root","maxWidth","margin","backgroundColor","palette","secondary","light","color","contrastText","marginBottom","media","height","paddingTop","expand","transform","transition","transitions","create","duration","shortest","expandOpen","avatar","fontSize","cardHeader","cardFooter","Cards","state","dispatch","classes","expanded","setExpanded","useState","handleExpandClick","event","id","console","log","btnName","currentTarget","value","length","map","project","i","fields","projectName","charAt","variant","date","images","projectImages","file","url","description","window","open","liveLink","githubLink","sys","technoligiesUsed"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { Card, CardHeader, CardMedia, CardContent, CardActions, Collapse, Avatar, IconButton, Typography } from '@material-ui/core';\nimport { red,blue } from '@material-ui/core/colors';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { GitHub, LiveTv } from '@material-ui/icons';\n\nimport { useProjectsContext } from \"../Utils/ProjectsContext\"\nimport { Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: \"80%\",\n        margin: 'auto',\n        backgroundColor: theme.palette.secondary.light,\n        color: theme.palette.secondary.contrastText,\n        marginBottom:\"50px\"\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        margin: 'auto',\n       \n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n      \n    },\n    avatar: {\n        backgroundColor: red[500],\n        fontSize: \"35px\"\n    },\n    cardHeader:{\n        backgroundColor:\"lightgrey\"\n    },\n    cardFooter:{\n        backgroundColor:\"#f\"\n        \n    }\n}));\n\n\n\nexport default function Cards() {\n\n    //importing useProject context \n    const [state, dispatch] = useProjectsContext();\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(true);\n\n    const handleExpandClick = (event,id) => {\n        console.log(\"handle expand click\")\n        const btnName = event.currentTarget.value\n        console.log(btnName)\n        console.log(id)\n       setExpanded(!expanded)\n       \n    };\n\n\n    return (\n        <>\n            {state.length ? (\n                <div>\n                    <Grid item xs container spacing={3} >\n                        {state.map((project, i) => (\n\n                            <Grid item xs={12} md={12} lg={6}>\n                                <Card className={classes.root}>\n                                    <CardHeader \n                                        avatar={<Avatar aria-label=\"recipe\"\n                                            className={classes.avatar}>{project.fields.projectName.charAt(0)}</Avatar>}\n                                        action={<IconButton aria-label=\"settings\"></IconButton>}\n                                        titleTypographyProps={{ variant: \"h4\" }}\n                                        title={project.fields.projectName}\n                                        subheaderTypographyProps={{ variant: \"subheader\" }}\n                                        subheader={project.fields.date}\n                                    />\n\n                                    {project.fields.images.map(projectImages => (\n                                        <div>\n                                            <CardMedia\n                                                className={classes.media}\n                                                image={projectImages.fields.file.url}\n                                                title=\"Paella dish\"\n                                            />\n                                        </div>\n                                    ))}\n                                    <CardContent className={classes.cardHeader}>\n                                        <Typography variant=\"h4\" color=\"primary\"> Description:</Typography>\n                                        <Typography variant=\"h5\" color=\"textPrimary\" component=\"p\">\n                                          \n                                            {project.fields.description}\n                                        </Typography>\n                                    </CardContent>\n                                    <CardActions disableSpacing className={classes.cardFooter}>\n                                        <IconButton aria-label=\"live url\" onClick={() => window.open((project.fields.liveLink), '_blank')}><LiveTv /></IconButton>\n                                        <IconButton aria-label=\"Github\" onClick={() => window.open((project.fields.githubLink), '_blank')}><GitHub /></IconButton>\n\n                                        <IconButton\n                                            className={clsx(classes.expand, {\n                                                [classes.expandOpen]: expanded,\n                                            })}\n\n                                            name={project.sys.id}\n                                            value={project.sys.id}\n                                            onClick={(event)=>handleExpandClick(event,project.sys.id)}\n                                            aria-expanded={expanded}\n                                            aria-label=\"show more\"\n                                        >\n                                            {/* <ExpandMoreIcon /> */}\n                                        </IconButton>\n                                    </CardActions>\n                                    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                                        <CardContent>\n                                            <Typography paragraph variant=\"h5\">Technologies Used:</Typography>\n                                            {project.fields.technoligiesUsed.map(technoligiesUsed => (\n                                                <div>\n                                                    <Typography paragraph variant=\"h6\">\n                                                        {technoligiesUsed}\n                                                    </Typography>\n                                                </div>\n\n                                            ))}\n\n                                        </CardContent>\n\n                                    </Collapse>\n                                </Card>\n                            </Grid>\n\n                        ))}\n                    </Grid>\n\n                </div>\n            ) :\n                (\n                    <h3>No projects Found</h3>\n\n                )}\n        </>\n    );\n}"]},"metadata":{},"sourceType":"module"}